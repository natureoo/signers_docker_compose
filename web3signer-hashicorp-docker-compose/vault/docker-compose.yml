version: '3.9'
services:
#  ssl-certificate:
#    image: ubuntu:latest
#    container_name: 'ssl-certificate'
#    command: bash -c "if [ ! -f /certs/server.crt ]; then echo 'Generating SSL certificates...' && apt-get -qq update && apt-get install -y -q openssl && openssl req -x509 -nodes -days 36500 -newkey rsa:2048 -keyout /certs/server.key -out /certs/server.crt -subj '/CN=localhost' -extensions SAN -config <(echo '[req]'; echo 'default_bits = 2048'; echo 'prompt = no'; echo 'default_md = sha256'; echo 'req_extensions = SAN'; echo '[SAN]'; echo 'subjectAltName=DNS:localhost,IP:127.0.0.1'); else echo 'SSL certificate already exists'; fi"
#    volumes:
#      - ./certs:/certs
  
  ssl-certificate:
    image: alpine:latest
    container_name: 'ssl-certificate'
    command: >
      sh -c "if [ ! -f /certs/server.crt ]; then
       echo 'Generating SSL certificates...' && apk update && apk add openssl && rm -rf /var/cache/apk/* &&
       openssl req -x509 -newkey rsa:2048 -nodes -days 36500 -keyout /certs/server.key -out /certs/server.crt -subj '/CN=localhost' -addext 'subjectAltName = DNS:localhost,IP:127.0.0.1'
       else
       echo 'SSL certificate already exists'
       fi"
    volumes:
      - ./certs:/certs
  
  vault:
    image: hashicorp/vault:latest
    container_name: 'hashicorp-vault-inmem-tls'
    command: server -config /config
    ports:
      - "8200:8200"
    volumes:
      - "./certs:/tls"
      - "./data:/data"
      - "./config:/config"
    environment:
      - 'VAULT_SKIP_VERIFY=true'
      - 'VAULT_ENABLE_FILE_PERMISSIONS_CHECK=false'
    cap_add:
      - IPC_LOCK
    depends_on:
      ssl-certificate:
        condition: service_completed_successfully
  
  init-vault:
    image: usmans/init-vault
    build:
      context: ./initvault
    container_name: "init-vault"
    volumes:
      - ./creds:/creds
    depends_on:
      vault:
        condition: service_started
    command: https://vault:8200